import plotly.express as px
import pandas as pd
import streamlit as st
from streamlit_option_menu import option_menu

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è —à–∞–ø–∫–∏ –≤–µ–±-—Å–∞–π—Ç–∞

st.set_page_config(page_title="Dashboard Vacancy Analysis", page_icon=":bar_chart:", layout='wide')

# –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ –Ω–∞ —Å–∞–π—Ç


with st.sidebar:
    selected = option_menu(
        menu_title="–ú–µ–Ω—é",
        options=["üè† –ì–ª–∞–≤–Ω–∞—è", "üìà –¢–æ–ø –Ω–∞–≤—ã–∫–∏ IT", "‚ùì –û –ø—Ä–æ–µ–∫—Ç–µ"]
    )

if selected == "üè† –ì–ª–∞–≤–Ω–∞—è":
    # –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ –Ω–∞ —Å–∞–π—Ç
    df = pd.read_excel(
        io='C:/Users/User/Desktop/diploma/streamlit_web_app/clear_dataframe.xlsx',
        engine='openpyxl',
        sheet_name="Sheet1",
        usecols="B:I",
    )

    st.header('Dashboard Vacancy Analysis :bar_chart:', divider='rainbow')

    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü—è–∏ –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    st.sidebar.header("–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –í–∞—Å:")

    # —Ñ–∏–ª—å—Ç—Ä –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã
    time_schedule_filter = st.sidebar.multiselect(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–ª—è '–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã': ",
        options=df["–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã"].unique(),
        default=df["–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã"].unique()
    )

    # —Ñ–∏–ª—å—Ç—Ä –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã
    working_experience_filter = st.sidebar.multiselect(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–ª—è '–¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç': ",
        options=df["–¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç"].unique(),
        default=df["–¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç"].unique()
    )
    # —Ñ–∏–ª—å—Ç—Ä –≥–æ—Ä–æ–¥–∞
    city_filter = st.sidebar.multiselect(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–ª—è '–ì–æ—Ä–æ–¥': ",
        options=df["–ì–æ—Ä–æ–¥"].unique(),
        default=df["–ì–æ—Ä–æ–¥"].unique()
    )

    # –ó–∞–ø—Ä–æ—Å –∫ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º—É –¥–ª—è –æ—Å—É—â–µ—Å—Ç–≤–µ–ª–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
    # –ø–æ —Ç–µ–º —Ñ–∏–ª—å—Ç—Ä–∞–º –∫–æ—Ç–æ—Ç—Ä—ã–µ –∑–∞–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º—ã
    selection_query = df.query(
        "`–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã` == @time_schedule_filter & `–¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç` == @working_experience_filter & `–ì–æ—Ä–æ–¥` == "
        "@city_filter ")
    # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    st.dataframe(selection_query)

    length_df = len(df)
    st.subheader(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π :green[–≤ –±–∞–∑–µ] –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç - {length_df}", )

    # df = df.set_index("–ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞")
    # st.bar_chart(df["–ö–æ–Ω–µ—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞"], use_container_width=True)

    column1, column2 = st.columns(2)

    with column1:
        # –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏—Ö—Å—è –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å—Ç–æ–ª–±—Ü–µ
        counts = df['–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã'].value_counts().reset_index()
        counts.columns = ['–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']

        # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä—É–≥–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
        fig = px.pie(counts, values='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', names='–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã',
                     title='–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–æ —Å—Ç–æ–ª–±—Ü—É –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã', hole=.3)
        fig.update_traces(textposition='inside', textfont_size=16)
        st.plotly_chart(fig)
    with column2:
        # –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏—Ö—Å—è –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å—Ç–æ–ª–±—Ü–µ
        counts = df['–¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç'].value_counts().reset_index()
        counts.columns = ['–¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']

        # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä—É–≥–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
        fig = px.pie(counts, values='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', names='–¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç',
                     title='–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–æ —Å—Ç–æ–ª–±—Ü—É –¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç', hole=.3)
        fig.update_traces(textposition='inside', textfont_size=16)
        st.plotly_chart(fig)

    # –ó–∞—Ä–ø–ª–∞—Ç—ã - –≥—Ä–∞—Ñ–∏–∫ –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞

    counts_start = df["–ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞"].value_counts().reset_index()
    counts_start.columns = ["–ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞", '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π']

    fig = px.bar(counts_start, x='–ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞', y='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π', color="–ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞",
                 title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–¥–∞—Ç–µ–ª–µ–π –ø–æ –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–∞—Ä–ø–ª–∞—Ç–∞–º',
                 color_continuous_scale='rainbow', text_auto=True)
    st.plotly_chart(fig, use_container_width=True)

    # –ó–∞—Ä–ø–ª–∞—Ç—ã - –≥—Ä–∞—Ñ–∏–∫ –ö–æ–Ω–µ—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞

    counts_end = df["–ö–æ–Ω–µ—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞"].value_counts().reset_index()
    counts_end.columns = ["–ö–æ–Ω–µ—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞", '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π']

    fig_3 = px.bar(counts_end, x='–ö–æ–Ω–µ—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞', y='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π', color='–ö–æ–Ω–µ—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞',
                   title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–¥–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–Ω–µ—á–Ω—ã–º –∑–∞—Ä–ø–ª–∞—Ç–∞–º',
                   color_continuous_scale='rainbow', text_auto=True)
    st.plotly_chart(fig_3, use_container_width=True)

    # st.dataframe(counts, use_container_width=True)

    # –†–∞–±–æ—Ç–∞–¥–∞—Ç–µ–ª–∏ - –≥—Ä–∞—Ñ–∏–∫
    counts_employee = df["–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å"].value_counts().reset_index()
    counts_employee.columns = ["–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å", '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π']
    fig_2 = px.bar(counts_employee[:31], x='–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å', y='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π', color="–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å",
                   title='–¢–æ–ø 30 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–¥–∞—Ç–µ–ª–µ–π')
    st.plotly_chart(fig_2, use_container_width=True)

    # –ì–æ—Ä–æ–¥–∞ - –≥—Ä–∞—Ñ–∏–∫
    city_count = df['–ì–æ—Ä–æ–¥'].value_counts().reset_index()
    city_count.columns = ['–ì–æ—Ä–æ–¥', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π']

    fig_4 = px.bar(city_count, x='–ì–æ—Ä–æ–¥', y='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π', color='–ì–æ—Ä–æ–¥',
                   title='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ –≥–æ—Ä–æ–¥–∞–º', text_auto=True)
    st.plotly_chart(fig_4, use_container_width=True)

if selected == "üìà –¢–æ–ø –Ω–∞–≤—ã–∫–∏ IT":
    st.header('–¢–æ–ø –Ω–∞–≤—ã–∫–∏ –¥–ª—è IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ :bar_chart:', divider='rainbow')

    st.caption(
        "–î–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ–º–æ–∂–µ—Ç –í–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç"
        " —á–∞—â–µ –≤—Å–µ–≥–æ —Ç—Ä–µ–±—É—é—Ç –≤ —Å–≤–æ–∏—Ö –≤–∞–∫–∞–Ω—Å–∏—è—Ö –ö–æ–º–ø–∞–Ω–∏–∏-—Ä–∞–±–æ—Ç–∞–¥–∞—Ç–µ–ª–∏."
        " –ó–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –∫–∞–∫ –∏ –≤–µ—Å—å —Å–ø–∏—Å–æ–∫, —Ç–∞–∫ –∏ —É–¥–æ–±–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –ø–µ—Ä–≤—ã—Ö 50 –Ω–∞–≤—ã–∫–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")

    # –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ —Å –Ω–∞–≤—ã–∫–∞–º–∏ –Ω–∞ —Å–∞–π—Ç
    df_IT_skills = pd.read_excel(
        io='C:/Users/User/Desktop/diploma/streamlit_web_app/top_skills_new_cleared.xlsx',
        engine='openpyxl',
        sheet_name="Sheet1",
        usecols="A:B",
    )

    st.dataframe(df_IT_skills, use_container_width=True)

    st.subheader('–ù–∞ –¥–∞–Ω–Ω–æ–º –≥—Ä–∞—Ñ–∏–∫–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –ø–µ—Ä–≤—ã–µ :blue[50 –Ω–∞–≤—ã–∫–æ–≤] –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –≤ '
                 '–æ–±–ª–∞—Å—Ç–∏ IT :sunglasses:')

    fig = px.bar(df_IT_skills, x=df_IT_skills['–ù–∞–≤—ã–∫'][:50], y=df_IT_skills['–ß–∞—Å—Ç–æ—Ç–∞'][:50],
                 color=df_IT_skills['–ù–∞–≤—ã–∫'][:50], height=400)
    st.plotly_chart(fig, use_container_width=True)

if selected == "‚ùì –û –ø—Ä–æ–µ–∫—Ç–µ":
    st.header('–û –ø—Ä–æ–µ–∫—Ç–µ :bar_chart:', divider='rainbow')
    st.caption('–î–∞–Ω–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–µ—Å–∏–∏–∏ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö '
               '–¥–∞–Ω–Ω—ã—Ö –æ—Ç—Ä–∞—Å–ª–∏ IT —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –ó–∞—Ä–ø–ª–∞—Ç–∞, '
               '–ö–æ–º–ø–∞–Ω–∏–∏-—Ä–∞–±–æ—Ç–∞–¥–∞—Ç–µ–ª–∏, —Å—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Å–ø—Ü–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ. –î–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
               '–ø–æ–¥–æ–π–¥–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π, –Ω–æ –∏ –¥–ª—è —Ä–∞–±–æ—Ç–∞–¥–∞—Ç–µ–ª–µ–π')
    st.divider()

    st.markdown("![Alt Text](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExajlqMWQxeWNlYWxmOWh1anMyb2Fybzd4YXU0bHRpNDZrYjZrejhmOSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/coxQHKASG60HrHtvkt/giphy.gif)")


